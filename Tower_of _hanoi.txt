import java.util.*;

class Tower_of_Hanoi
{
	public static void towerofhanoi(int [] digits)
	{
		Stack<Integer> st1 = new Stack<>();
		Stack<Integer> st2 = new Stack<>();
		Stack<Integer> st3 = new Stack<>();

		int i=0,j=0,n=digits.length;		

		while(i<n){
			st1.push(digits[i]);
			i++;
		}

		while(!st1.isEmpty())
		{
			int tall  = st1.pop();

			if(st3.isEmpty()){

				st3.push(tall);

			}else if(st2.isEmpty()){

				st2.push(tall);
			}
			if(st2.size()>=2){

				int sum = st2.pop();

				if(sum < st2.peek()){

					if(st1.isEmpty()){

						st1.push(sum);
					}
				}
			}
			if(!st2.isEmpty()){

				if(st2.size()>=1 && st3.size()>=1){

					if(st3.peek() < st2.peek()){

						st2.push(st3.pop());
					}else{

						st3.push(st2.pop());
					}
				}
			}
		}
		
		int[]arr= new int[st3.size()];
		int k=0;

		while(!st3.isEmpty()){
			arr[k++]=st3.pop();
		}

		for(int p=0;p<arr.length;p++){
			System.out.print(arr[p]);
		}
	}
	public static void main(String arg[])
	{
		int digits[]={1,2,3};
		towerofhanoi(digits);	
	}
}	